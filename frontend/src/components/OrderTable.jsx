import { Table, Button, Space, Modal, message } from 'antd';
import { useEffect, useState } from 'react';
import axios from 'axios';
import OrderForm from './OrderForm';
import { useNavigate } from 'react-router-dom';

export default function OrderTable() {
    const [orders, setOrders] = useState([]);
    const [editingOrder, setEditingOrder] = useState(null);
    const [isModalOpen, setIsModalOpen] = useState(false);
    const [toDelete, setToDelete] = useState(null); // üëà –î–ª—è —Å–≤–æ–µ–π –º–æ–¥–∞–ª–∫–∏
    const navigate = useNavigate();

    const fetchOrders = () => {
        axios.get('http://localhost:8080/orders')
            .then(res => setOrders(res.data))
            .catch(console.error);
    };

    useEffect(() => {
        fetchOrders();
    }, []);

    const columns = [
        { title: '–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞', dataIndex: 'customerName' },
        {
            title: '–ü—Ä–æ–¥—É–∫—Ç—ã',
            render: (_, record) => record.products.map(p => p.name).join(', ')
        },
        { title: '–°—É–º–º–∞', dataIndex: 'totalAmount' },
        { title: '–î–∞—Ç–∞', dataIndex: 'orderDate' },
        {
            title: '–î–µ–π—Å—Ç–≤–∏—è',
            render: (_, record) => (
                <Space>
                    <Button
                        style={{ color: '#40e0d0' }}
                        onClick={() => {
                            setEditingOrder(record);
                            setIsModalOpen(true);
                        }}
                    >
                        –ò–∑–º–µ–Ω–∏—Ç—å
                    </Button>
                    <Button danger onClick={() => setToDelete(record)}>–£–¥–∞–ª–∏—Ç—å</Button>
                </Space>
            )
        }
    ];

    return (
        <>
            <Button
                style={{ marginBottom: 16, backgroundColor: '#40e0d0', color: 'black' }}
                onClick={() => {
                    setEditingOrder(null);
                    setIsModalOpen(true);
                }}
            >
                –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑
            </Button>

            <Table
                dataSource={orders}
                columns={columns}
                rowKey="id"
                pagination={{ pageSize: 10 }}
                onRow={(record) => ({
                    onClick: () => navigate(`/orders/${record.id}`)
                })}
            />


            <OrderForm
                visible={isModalOpen}
                onCancel={() => setIsModalOpen(false)}
                onSuccess={() => {
                    setIsModalOpen(false);
                    fetchOrders();
                }}
                order={editingOrder}
            />

            {/* üî• –ú–æ–¥–∞–ª–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è */}
            <Modal
                open={!!toDelete}
                title={`–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑ –∫–ª–∏–µ–Ω—Ç–∞ "${toDelete?.customerName}"?`}
                onCancel={() => setToDelete(null)}
                onOk={() => {
                    axios.delete(`http://localhost:8080/orders/${toDelete.id}`)
                        .then(() => {
                            message.success('–£–¥–∞–ª–µ–Ω–æ');
                            fetchOrders();
                        })
                        .catch(() => message.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏'))
                        .finally(() => setToDelete(null));
                }}
                okButtonProps={{ style: { backgroundColor: '#40e0d0', borderColor: '#40e0d0' } }}
                okText="–£–¥–∞–ª–∏—Ç—å"
                cancelText="–û—Ç–º–µ–Ω–∞"
            />
        </>
    );
}

